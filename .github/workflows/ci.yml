name: ci

on:
  pull_request:
    branches:
    - master
  push:
    branches:
    - release/*
    - hotfix/*
    - master
    tags:
    - v*

jobs:
  unittest:
    name: Run Unit TestCase
    strategy:
      fail-fast: true
      matrix:
        go-version: [1.21.x]
    runs-on: ubuntu-latest
    steps:
    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ${{matrix.go-version}}
    - name: Check out code into the Go module directory
      uses: actions/checkout@v2
    - name: Unittest
      run: make test
    - name: Upload code coverage report
      if: ${{ matrix.go-version == '1.21.x' }}
      uses: actions/upload-artifact@v2
      with:
        name: code-coverage-report
        path: coverage.txt
    - name: Benchmark
      run: make bench

  code-coverage:
    name: Publish Code Coverage Report
    runs-on: ubuntu-latest
    needs: unittest
    steps:
    - name: Check out code into the Go module directory
      uses: actions/checkout@v2
    - name: Download code coverage report
      uses: actions/download-artifact@v2
      with:
        name: code-coverage-report
    - name: Code Coverage Report
      uses: codecov/codecov-action@v2
      with:
        files: coverage.txt
        verbose: true
        flags: unittest
        fail_ci_if_error: true
        token: ${{ secrets.CODECOV_TOKEN }}

  build-docker-image:
    name: Build and Publish Docker Image
    runs-on: ubuntu-latest
    needs: code-coverage
    steps:
    - name: Check out code into the Go module directory
      uses: actions/checkout@v2
    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v3
      with:
        images: ghcr.io/wosai/deepmock
        tags: |
          type=ref, event=tag
          type=ref, event=branch
          type=ref, event=pr
          type=sha
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Build and push
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
